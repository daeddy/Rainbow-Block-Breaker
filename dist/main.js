(()=>{"use strict";var t,a,e,i,r={2:(t,a)=>{a.__esModule=!0;var e=function(){function t(t,a){this.x=0,this.y=0,this.width=50,this.height=10,this.width=t,this.height=a}return t.prototype.hitTestPoint=function(t,a){return t>=this.x&&t<=this.x+this.width&&a>=this.y&&this.y<=this.y+this.height},t}();a.default=e},921:(t,a,e)=>{a.__esModule=!0;var i=e(60),r=e(668),n=function(){function t(t,a){this._width=t,this._height=a,this._count=t*a,this.values=new Array(t*a);for(var e=new r.default,n=0;n<this._width;n++){e.h=360*n/this._width;for(var o=0;o<this._height;o++){var s=new i.default(n,o);s.color=e.value(),this.values[n+o*this._width]=s}}}return t.prototype.count=function(){return this._count},t.prototype.width=function(){return this._width},t.prototype.height=function(){return this._height},t.prototype.getParticle=function(t,a){var e=t+a*this._width;if(!(e>=this.values.length||e<0))return this.values[t+a*this._width]},t.prototype.removeParticle=function(t,a){var e=this.values[t+a*this._width];return e&&(this._count--,this.values[t+a*this._width]=void 0),e},t}();a.default=n},668:(t,a)=>{a.__esModule=!0;var e=function(){function t(){this.h=0,this.s=1,this.v=1}return t.prototype.value=function(){return this.hsv2rgb()},t.prototype.hsv2rgb=function(){var t=this.h/60,a=this.s,e=this.v;if(0==a)return[255*e,255*e,255*e];var i=[],r=Math.floor(t),n=t-r,o=e*(1-a),s=e*(1-a*n),h=e*(1-a*(1-n));switch(r){case 0:case 6:i=[e,h,o];break;case 1:i=[s,e,o];break;case 2:i=[o,e,h];break;case 3:i=[o,s,e];break;case 4:i=[h,o,e];break;case 5:i=[e,o,s]}return i.map((function(t){return 255*t}))},t}();a.default=e},60:(t,a)=>{a.__esModule=!0;var e=function(){function t(t,a){void 0===t&&(t=0),void 0===a&&(a=0),this.vx=0,this.vy=0,this.color=[],this.x=t,this.y=a}return t.prototype.X=function(){return Math.round(this.x)},t.prototype.Y=function(){return Math.round(this.y)},t}();a.default=e}},n={};function o(t){var a=n[t];if(void 0!==a)return a.exports;var e=n[t]={exports:{}};return r[t](e,e.exports,o),e.exports}t=o(921),a=o(60),e=o(2),i=function(){function i(r){var n=this;this._fps=30,this.update=function(){if(n._now=Date.now(),n._elapsed=n._now-n._then,n._ctx){if(n._elapsed>n._fpsInterval){n._ctx.clearRect(0,0,n._canvas.width,n._canvas.height),n._data=n._ctx.getImageData(0,0,n._canvas.width,n._canvas.height);var t=4*n._data.width,e=n._data.data;n._blocks.values.forEach((function(a){if(a){var i=a.y*t+4*a.x;e[i]=a.color[0],e[i+1]=a.color[1],e[i+2]=a.color[2],e[i+3]=255}}));var r=new Array;n._balls.forEach((function(a){for(var o=a.vx,s=a.vy,h=Math.sqrt(o*o+s*s),c=Math.atan2(s,o),u=0;u<h;u++){a.x+=a.vx/h,a.y+=a.vy/h;var l=n._blocks.getParticle(a.X(),a.Y());if(l){var _=n._blocks.removeParticle(a.X(),a.Y());_&&(_.vx=3*Math.cos(c+2*Math.PI/(30*Math.random())-15),_.vy=1,_.color=l.color,n._fallBlocks.push(_)),a.vy=-a.vy}(a.x<0&&a.vx<0||a.x>i.WIDTH&&a.vx>0)&&(a.vx=-a.vx),a.y<0&&a.vy<0&&(a.vy=-a.vy),a.y>i.HEIGHT&&r.push(a),n._bar.hitTestPoint(a.x,a.y)&&(a.vy=-Math.abs(a.vy));var v=a.Y()*t+4*a.X();e[v]=a.color[0],e[v+1]=a.color[1],e[v+2]=a.color[2],e[v+3]=255}})),r.forEach((function(t){var a=n._balls.indexOf(t);-1!=a&&n._balls.splice(a,1)}));var o=new Array;n._fallBlocks.forEach((function(r){r.vy+=.1,r.x+=r.vx,r.x<0&&(r.x+=i.WIDTH),r.y+=r.vy;var s=r.Y()*t+4*r.X();if(e[s]=r.color[0],e[s+1]=r.color[1],e[s+2]=r.color[2],e[s+3]=255,n._bar.hitTestPoint(r.x,r.y)){var h=new a.default(r.x,r.y);h.vx=10*Math.random(),h.vy=9*Math.random()+1,h.color=r.color,n._balls.push(h),o.push(r)}else r.y>i.HEIGHT&&o.push(r)})),o.forEach((function(t){var a=n._fallBlocks.indexOf(t);-1!=a&&n._fallBlocks.splice(a,1)})),n._ctx.putImageData(n._data,0,0)}0==n._blocks.count()?(alert("CLEAR!\nおめでと"),n.init()):0==n._balls.length?(alert("ゲームオーバー"),n.init()):window.requestAnimationFrame(n.update.bind(n)),n._ctx.beginPath(),n._ctx.fillStyle="red",n._ctx.fillRect(n._bar.x,n._bar.y,n._bar.width,n._bar.height),n._ctx.stroke(),n._then=n._now-n._elapsed%n._fpsInterval}},this.touchmove=function(t){n._bar.x=t.touches[0].clientX-n._canvas.offsetLeft-n._bar.width/2,n._bar.x+n._bar.width>i.WIDTH&&(n._bar.x=i.WIDTH-n._bar.width),n._bar.x<0&&(n._bar.x=0),t.preventDefault()},this.mousemove=function(t){n._bar.x=t.clientX-n._canvas.offsetLeft-n._bar.width/2,n._bar.x+n._bar.width>i.WIDTH&&(n._bar.x=i.WIDTH-n._bar.width),n._bar.x<0&&(n._bar.x=0)},this.init=function(){n._blocks=new t.default(i.WIDTH,200),n._fallBlocks=new Array,n._bar=new e.default(200,10),n._bar.y=i.HEIGHT-n._bar.height-2;var r=new a.default(i.WIDTH/2,i.HEIGHT/2);r.vx=10*Math.random(),r.vy=9*-Math.random()-1,r.color=[255,255,255],n._balls=new Array,n._balls.push(r),n._fpsInterval=1e3/n._fps,n._then=Date.now(),window.requestAnimationFrame(n.update.bind(n))},this._canvas=r,this._ctx=this._canvas.getContext("2d"),r.addEventListener("mousemove",this.mousemove.bind(this),!1),r.addEventListener("touchmove",this.touchmove.bind(this),!1),this.init()}return i.HEIGHT=500,i.WIDTH=500,i}(),window.addEventListener("load",(function(t){var a=document.getElementById("canvas");new i(a)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUt1RCxPQUFTLElBQUk3RCxNQUNsQixFQUFLNkQsT0FBT2MsS0FBSzZCLEdBRWpCLEVBQUt2RCxhQUFlLElBQU8sRUFBS1IsS0FDaEMsRUFBS00sTUFBUUgsS0FBS0MsTUFFbEI2QyxPQUFPQyxzQkFBc0IsRUFBS2pELE9BQU9rRCxLQUFLLEtBSzlDbkcsS0FBSzBELFFBQVVYLEVBQ2YvQyxLQUFLdUQsS0FBT3ZELEtBQUswRCxRQUFRc0QsV0FBVyxNQUNwQ2pFLEVBQU9rRSxpQkFBaUIsWUFBYWpILEtBQUs4RyxVQUFVWCxLQUFLbkcsT0FBTyxHQUNoRStDLEVBQU9rRSxpQkFBaUIsWUFBYWpILEtBQUt3RyxVQUFVTCxLQUFLbkcsT0FBTyxHQUVoRUEsS0FBS2dHLE9BRWIsT0E3TW1CLEVBQUFYLE9BQWdCLElBQ2hCLEVBQUFELE1BQWUsSUE0TWxDLEVBOU1BLEdBZ05BYSxPQUFPZ0IsaUJBQWlCLFFBQVEsU0FBQ0MsR0FDN0IsSUFBSW5FLEVBQVNvRSxTQUFTQyxlQUFlLFVBQ0wsSUFBSWpDLEVBQWFwQyxPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvdy1wYXJ0aWNsZS1icmVha2VyLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovL3JhaW5ib3ctcGFydGljbGUtYnJlYWtlci8uL3NyYy9CYXIudHMiLCJ3ZWJwYWNrOi8vcmFpbmJvdy1wYXJ0aWNsZS1icmVha2VyLy4vc3JjL0Jsb2Nrcy50cyIsIndlYnBhY2s6Ly9yYWluYm93LXBhcnRpY2xlLWJyZWFrZXIvLi9zcmMvQ29sb3JIU1YudHMiLCJ3ZWJwYWNrOi8vcmFpbmJvdy1wYXJ0aWNsZS1icmVha2VyLy4vc3JjL1BhcnRpY2xlLnRzIiwid2VicGFjazovL3JhaW5ib3ctcGFydGljbGUtYnJlYWtlci93ZWJwYWNrL2Jvb3RzdHJhcCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmxvY2tzIGZyb20gJy4vQmxvY2tzJztcbmltcG9ydCBQYXJ0aWNsZSBmcm9tICcuL1BhcnRpY2xlJztcbmltcG9ydCBCYXIgZnJvbSAnLi9CYXInO1xuIFxuY2xhc3MgQmxvY2tCcmVha2VyIHtcbiAgICBwcml2YXRlIHN0YXRpYyBIRUlHSFQ6bnVtYmVyID0gNTAwO1xuICAgIHByaXZhdGUgc3RhdGljIFdJRFRIOm51bWJlciA9IDUwMDtcbiAgICBwcml2YXRlIF9jYW52YXM6SFRNTENhbnZhc0VsZW1lbnQ7XG4gICAgcHJpdmF0ZSBfY3R4OkNhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCB8IG51bGw7XG4gICAgcHJpdmF0ZSBfZGF0YSE6IEltYWdlRGF0YTtcbiAgICBwcml2YXRlIF9ibG9ja3MhOiBCbG9ja3M7XG4gICAgcHJpdmF0ZSBfZmFsbEJsb2NrcyE6IFBhcnRpY2xlW107XG4gICAgcHJpdmF0ZSBfYmFsbHMhOiBQYXJ0aWNsZVtdO1xuICAgIHByaXZhdGUgX2JhciE6IEJhcjtcbiAgICAvLyBmcHMgc3R1ZmZcbiAgICBwcml2YXRlIF9mcHM6IG51bWJlciA9IDMwO1xuICAgIHByaXZhdGUgX2Zwc0ludGVydmFsITogbnVtYmVyO1xuICAgIHByaXZhdGUgX25vdyE6IG51bWJlcjtcbiAgICBwcml2YXRlIF90aGVuITogbnVtYmVyO1xuICAgIHByaXZhdGUgX2VsYXBzZWQhOiBudW1iZXI7XG4gICAgXG5cbiAgICBwdWJsaWMgdXBkYXRlID0gKCkgPT4ge1xuICAgICAgICB0aGlzLl9ub3cgPSBEYXRlLm5vdygpO1xuICAgICAgICB0aGlzLl9lbGFwc2VkID0gdGhpcy5fbm93IC0gdGhpcy5fdGhlbjtcblxuICAgICAgICBpZiAodGhpcy5fY3R4KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fZWxhcHNlZCA+IHRoaXMuX2Zwc0ludGVydmFsKXtcbiAgICAgICAgICAgICAgICB0aGlzLl9jdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMuX2NhbnZhcy53aWR0aCwgdGhpcy5fY2FudmFzLmhlaWdodCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fZGF0YSA9IHRoaXMuX2N0eC5nZXRJbWFnZURhdGEoMCwgMCwgdGhpcy5fY2FudmFzLndpZHRoLCB0aGlzLl9jYW52YXMuaGVpZ2h0KTtcblxuICAgICAgICAgICAgICAgIHZhciB3aWR0aEJhc2UgPSB0aGlzLl9kYXRhLndpZHRoICogNDtcbiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2RhdGEuZGF0YTtcbiAgICAgICAgICAgICAgICB0aGlzLl9ibG9ja3MudmFsdWVzLmZvckVhY2goYmxvY2sgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYmxvY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vX2NhbnZhcy5zZXRQaXhlbChibG9jay54LCBibG9jay55LCBibG9jay5jb2xvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaWR4ID0gKChibG9jay55ICogd2lkdGhCYXNlKSArIChibG9jay54ICogNCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVtpZHhdID0gYmxvY2suY29sb3JbMF07IC8vUlxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVtpZHggKyAxXSA9IGJsb2NrLmNvbG9yWzFdOyAvL0dcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFbaWR4ICsgMl0gPSBibG9jay5jb2xvclsyXTsgLy9CXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhW2lkeCArIDNdID0gMHhGRjsgLy9BXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuXG4gICAgICAgICAgICAgICAgdmFyIHJlbW92ZUJhbGxzOlBhcnRpY2xlW10gPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9iYWxscy5mb3JFYWNoKGJhbGwgPT4ge1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBidng6bnVtYmVyID0gYmFsbC52eDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJ2eTpudW1iZXIgPSBiYWxsLnZ5O1xuICAgICAgICAgICAgICAgICAgICB2YXIgYnNwZWVkOm51bWJlciA9IE1hdGguc3FydChidnggKiBidnggKyBidnkgKiBidnkpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgYnJhZGl1czpudW1iZXIgPSBNYXRoLmF0YW4yKGJ2eSwgYnZ4KTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBic3BlZWQ7aSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWxsLnggKz0gYmFsbC52eC9ic3BlZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWxsLnkgKz0gYmFsbC52eS9ic3BlZWQ7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBoaXRQYXJ0aWNsZTpQYXJ0aWNsZSB8IHVuZGVmaW5lZCA9IHRoaXMuX2Jsb2Nrcy5nZXRQYXJ0aWNsZShiYWxsLlgoKSwgYmFsbC5ZKCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYoaGl0UGFydGljbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVtb3ZlZFA6UGFydGljbGUgfCB1bmRlZmluZWQgPSB0aGlzLl9ibG9ja3MucmVtb3ZlUGFydGljbGUoYmFsbC5YKCksIGJhbGwuWSgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVtb3ZlZFApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3ZlZFAudnggPSBNYXRoLmNvcyhicmFkaXVzK01hdGguUEkqMi8oMzAqTWF0aC5yYW5kb20oKSktMTUpKjM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZWRQLnZ5ID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3ZlZFAuY29sb3IgPSBoaXRQYXJ0aWNsZS5jb2xvcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fZmFsbEJsb2Nrcy5wdXNoKHJlbW92ZWRQKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFsbC52eSA9IC1iYWxsLnZ5O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKGJhbGwueCA8IDAgJiYgYmFsbC52eCA8IDApIHx8IChiYWxsLnggPiBCbG9ja0JyZWFrZXIuV0lEVEggJiYgYmFsbC52eCA+IDApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFsbC52eCA9IC1iYWxsLnZ4O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJhbGwueSA8IDAgJiYgYmFsbC52eSA8IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWxsLnZ5ID0gLWJhbGwudnk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmFsbC55ID4gQmxvY2tCcmVha2VyLkhFSUdIVCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZUJhbGxzLnB1c2goYmFsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fYmFyLmhpdFRlc3RQb2ludChiYWxsLngsIGJhbGwueSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWxsLnZ5ID0gLU1hdGguYWJzKGJhbGwudnkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL19jYW52YXMuc2V0UGl4ZWwoYmFsbC54LCBiYWxsLnksIGJhbGwuY29sb3IpO1xcXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaWR4ID0gKGJhbGwuWSgpICogd2lkdGhCYXNlKSArIChiYWxsLlgoKSAqIDQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVtpZHhdID0gYmFsbC5jb2xvclswXTsgLy9SXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhW2lkeCArIDFdID0gYmFsbC5jb2xvclsxXTsgLy9HXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhW2lkeCArIDJdID0gYmFsbC5jb2xvclsyXTsgLy9CXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhW2lkeCArIDNdID0gMHhGRjsgLy9BXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHJlbW92ZUJhbGxzLmZvckVhY2goYiA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IHRoaXMuX2JhbGxzLmluZGV4T2YoYik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCAhPSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fYmFsbHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHZhciByZW1vdmVGYWxsQnM6UGFydGljbGVbXSA9IG5ldyBBcnJheSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2ZhbGxCbG9ja3MuZm9yRWFjaChmYWxsUCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZhbGxQLnZ5ICs9IDAuMTtcbiAgICAgICAgICAgICAgICAgICAgZmFsbFAueCArPSBmYWxsUC52eDtcbiAgICAgICAgICAgICAgICAgICAgaWYoZmFsbFAueCA8IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhbGxQLnggKz0gQmxvY2tCcmVha2VyLldJRFRIO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZhbGxQLnkgKz0gZmFsbFAudnk7XG4gICAgICAgICAgICAgICAgICAgIC8vX2NhbnZhcy5zZXRQaXhlbChmYWxsUC54LCBmYWxsUC55LCBmYWxsUC5jb2xvcik7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpZHggPSAoKGZhbGxQLlkoKSAqIHdpZHRoQmFzZSkgKyAoZmFsbFAuWCgpICogNCkpO1xuICAgICAgICAgICAgICAgICAgICBkYXRhW2lkeF0gPSBmYWxsUC5jb2xvclswXTsgLy9SXG4gICAgICAgICAgICAgICAgICAgIGRhdGFbaWR4ICsgMV0gPSBmYWxsUC5jb2xvclsxXTsgLy9HXG4gICAgICAgICAgICAgICAgICAgIGRhdGFbaWR4ICsgMl0gPSBmYWxsUC5jb2xvclsyXTsgLy9CXG4gICAgICAgICAgICAgICAgICAgIGRhdGFbaWR4ICsgM10gPSAweEZGOyAvL0FcblxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fYmFyLmhpdFRlc3RQb2ludChmYWxsUC54LGZhbGxQLnkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3YmFsbDpQYXJ0aWNsZSA9IG5ldyBQYXJ0aWNsZShmYWxsUC54LGZhbGxQLnkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3YmFsbC52eCA9IE1hdGgucmFuZG9tKCkgKiAxMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld2JhbGwudnkgPSBNYXRoLnJhbmRvbSgpICogOSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdiYWxsLmNvbG9yID0gZmFsbFAuY29sb3I7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9iYWxscy5wdXNoKG5ld2JhbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3ZlRmFsbEJzLnB1c2goZmFsbFApO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGZhbGxQLnkgPiBCbG9ja0JyZWFrZXIuSEVJR0hUKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVGYWxsQnMucHVzaChmYWxsUCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICByZW1vdmVGYWxsQnMuZm9yRWFjaChiID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gdGhpcy5fZmFsbEJsb2Nrcy5pbmRleE9mKGIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2ZhbGxCbG9ja3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8v5o+P55S7XG4gICAgICAgICAgICAgICAgdGhpcy5fY3R4LnB1dEltYWdlRGF0YSh0aGlzLl9kYXRhLCAwLCAwKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMuX2Jsb2Nrcy5jb3VudCgpID09IDApIHtcbiAgICAgICAgICAgICAgICBhbGVydChcIkNMRUFSIVxcbuOBiuOCgeOBp+OBqFwiKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXQoKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5fYmFsbHMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICBhbGVydChcIuOCsuODvOODoOOCquODvOODkOODvFwiKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy9iYXJcbiAgICAgICAgICAgIHRoaXMuX2N0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIHRoaXMuX2N0eC5maWxsU3R5bGUgPSBcInJlZFwiO1xuICAgICAgICAgICAgdGhpcy5fY3R4LmZpbGxSZWN0KHRoaXMuX2Jhci54LCB0aGlzLl9iYXIueSwgdGhpcy5fYmFyLndpZHRoLCB0aGlzLl9iYXIuaGVpZ2h0KTtcbiAgICAgICAgICAgIHRoaXMuX2N0eC5zdHJva2UoKTtcblxuXG4gICAgICAgICAgICAvLyBHZXQgcmVhZHkgZm9yIG5leHQgZnJhbWUgYnkgc2V0dGluZyB0aGVuPW5vdywgYnV0Li4uXG4gICAgICAgICAgICAvLyBBbHNvLCBhZGp1c3QgZm9yIGZwc0ludGVydmFsIG5vdCBiZWluZyBtdWx0aXBsZSBvZiAxNi42N1xuICAgICAgICAgICAgdGhpcy5fdGhlbiA9IHRoaXMuX25vdyAtICh0aGlzLl9lbGFwc2VkICUgdGhpcy5fZnBzSW50ZXJ2YWwpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHRvdWNobW92ZSA9IChldnQ6IGFueSkgPT57XG4gICAgICAgIHRoaXMuX2Jhci54ID0gZXZ0LnRvdWNoZXNbMF0uY2xpZW50WCAtIHRoaXMuX2NhbnZhcy5vZmZzZXRMZWZ0IC0gKHRoaXMuX2Jhci53aWR0aCAvIDIpO1xuICAgICAgICBpZih0aGlzLl9iYXIueCArIHRoaXMuX2Jhci53aWR0aCA+IEJsb2NrQnJlYWtlci5XSURUSCl7XG4gICAgICAgICAgICB0aGlzLl9iYXIueCA9IEJsb2NrQnJlYWtlci5XSURUSCAtIHRoaXMuX2Jhci53aWR0aDtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLl9iYXIueCA8IDApe1xuICAgICAgICAgICAgdGhpcy5fYmFyLnggPSAwO1xuICAgICAgICB9XG4gICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBtb3VzZW1vdmUgPSAoZXZ0OiBhbnkpID0+e1xuICAgICAgICB0aGlzLl9iYXIueCA9IGV2dC5jbGllbnRYIC0gdGhpcy5fY2FudmFzLm9mZnNldExlZnQgLSAodGhpcy5fYmFyLndpZHRoIC8gMik7XG4gICAgICAgIGlmKHRoaXMuX2Jhci54ICsgdGhpcy5fYmFyLndpZHRoID4gQmxvY2tCcmVha2VyLldJRFRIKXtcbiAgICAgICAgICAgIHRoaXMuX2Jhci54ID0gQmxvY2tCcmVha2VyLldJRFRIIC0gdGhpcy5fYmFyLndpZHRoO1xuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMuX2Jhci54IDwgMCl7XG4gICAgICAgICAgICB0aGlzLl9iYXIueCA9IDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgaW5pdCA9KCkgPT57XG4gICAgICAgIHRoaXMuX2Jsb2NrcyA9IG5ldyBCbG9ja3MoQmxvY2tCcmVha2VyLldJRFRILCAyMDApO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5fZmFsbEJsb2NrcyA9IG5ldyBBcnJheSgpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5fYmFyID0gbmV3IEJhcigyMDAsIDEwKTtcbiAgICAgICAgdGhpcy5fYmFyLnkgPSBCbG9ja0JyZWFrZXIuSEVJR0hUIC0gdGhpcy5fYmFyLmhlaWdodCAtIDI7XG5cbiAgICAgICAgdmFyIF9iYWxsOlBhcnRpY2xlID0gbmV3IFBhcnRpY2xlKEJsb2NrQnJlYWtlci5XSURUSCAvIDIsIEJsb2NrQnJlYWtlci5IRUlHSFQgLyAyKTtcbiAgICAgICAgX2JhbGwudnggPSBNYXRoLnJhbmRvbSgpICogMTA7XG4gICAgICAgIF9iYWxsLnZ5ID0gLU1hdGgucmFuZG9tKCkgKiA5IC0xO1xuICAgICAgICBfYmFsbC5jb2xvciA9IFsweEZGLCAweEZGLCAweEZGXTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuX2JhbGxzID0gbmV3IEFycmF5KCk7XG4gICAgICAgIHRoaXMuX2JhbGxzLnB1c2goX2JhbGwpO1xuXG4gICAgICAgIHRoaXMuX2Zwc0ludGVydmFsID0gMTAwMCAvIHRoaXMuX2ZwcztcbiAgICAgICAgdGhpcy5fdGhlbiA9IERhdGUubm93KCk7XG5cbiAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihjYW52YXM6SFRNTENhbnZhc0VsZW1lbnQpXG4gICAge1xuICAgICAgICB0aGlzLl9jYW52YXMgPSBjYW52YXM7XG4gICAgICAgIHRoaXMuX2N0eCA9IHRoaXMuX2NhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgICAgIGNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLm1vdXNlbW92ZS5iaW5kKHRoaXMpLCBmYWxzZSk7XG4gICAgICAgIGNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLnRvdWNobW92ZS5iaW5kKHRoaXMpLCBmYWxzZSk7XG5cbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxufVxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKGUpID0+IHtcbiAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XG4gICAgdmFyIGJsb2NrQnJlYWtlcjpCbG9ja0JyZWFrZXIgPSBuZXcgQmxvY2tCcmVha2VyKGNhbnZhcyk7XG59KTtcbiBcbiAiLCJjbGFzcyBCYXIge1xuICB4Om51bWJlciA9IDA7XG4gIHk6bnVtYmVyID0gMDtcbiAgd2lkdGg6bnVtYmVyID0gNTA7XG4gIGhlaWdodDpudW1iZXIgPSAxMDtcblxuICBoaXRUZXN0UG9pbnQoeDpudW1iZXIsIHk6bnVtYmVyKTpib29sZWFuIHtcbiAgICAgIGlmICh4ID49IHRoaXMueCAmJiB4IDw9IHRoaXMueCArIHRoaXMud2lkdGggJiYgeSA+PSB0aGlzLnkgICYmIHRoaXMueSA8PSB0aGlzLnkgKyB0aGlzLmhlaWdodCkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3Rvcih3aWR0aDpudW1iZXIsIGhlaWdodDpudW1iZXIpIHtcbiAgICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhcjsiLCJpbXBvcnQgUGFydGljbGUgZnJvbSAnLi9QYXJ0aWNsZSc7XG5pbXBvcnQgQ29sb3JIU1YgZnJvbSAnLi9Db2xvckhTVic7XG5cbmNsYXNzIEJsb2NrcyB7XG4gIHByaXZhdGUgX2NvdW50Om51bWJlcjtcbiAgY291bnQoKXsgcmV0dXJuIHRoaXMuX2NvdW50O31cbiAgcHJpdmF0ZSBfd2lkdGg6bnVtYmVyO1xuICB3aWR0aCgpOm51bWJlciB7IHJldHVybiB0aGlzLl93aWR0aDsgfVxuICBwcml2YXRlIF9oZWlnaHQ6bnVtYmVyO1xuICBoZWlnaHQoKTpudW1iZXIgeyByZXR1cm4gdGhpcy5faGVpZ2h0OyB9XG4gIHZhbHVlczooUGFydGljbGV8dW5kZWZpbmVkKVtdO1xuICBjb25zdHJ1Y3Rvcih3aWR0aDpudW1iZXIsIGhlaWdodDpudW1iZXIpIHtcbiAgICAgIHRoaXMuX3dpZHRoID0gd2lkdGg7XG4gICAgICB0aGlzLl9oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICB0aGlzLl9jb3VudCA9IHdpZHRoICogaGVpZ2h0O1xuICAgICAgdGhpcy52YWx1ZXMgPSBuZXcgQXJyYXkod2lkdGggKiBoZWlnaHQpO1xuICAgICAgdmFyIGM6Q29sb3JIU1YgPSBuZXcgQ29sb3JIU1YoKTtcbiAgICAgIGZvciAodmFyIGk6bnVtYmVyID0gMDsgaSA8IHRoaXMuX3dpZHRoOyBpKyspIHtcbiAgICAgICAgICBjLmggPSAzNjAgKiBpIC8gdGhpcy5fd2lkdGg7XG4gICAgICAgICAgZm9yICh2YXIgajpudW1iZXIgPSAwIDsgaiA8IHRoaXMuX2hlaWdodDsgaisrKSB7XG4gICAgICAgICAgICAgIHZhciBwOlBhcnRpY2xlID0gbmV3IFBhcnRpY2xlKGksIGopO1xuICAgICAgICAgICAgICBwLmNvbG9yID0gYy52YWx1ZSgpO1xuICAgICAgICAgICAgICB0aGlzLnZhbHVlc1tpICsgaiAqIHRoaXMuX3dpZHRoXSA9IHA7XG4gICAgICAgICAgfVxuICAgICAgfVxuICB9XG4gIGdldFBhcnRpY2xlKHg6bnVtYmVyLCB5Om51bWJlcik6UGFydGljbGUgfCB1bmRlZmluZWQge1xuICAgICAgdmFyIGluZGV4Om51bWJlciA9IHggKyB5ICogdGhpcy5fd2lkdGg7XG4gICAgICBpZiAoaW5kZXggPj0gdGhpcy52YWx1ZXMubGVuZ3RoIHx8IGluZGV4IDwgMCkge1xuICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy52YWx1ZXNbeCArIHkgKiB0aGlzLl93aWR0aF07XG4gIH1cbiAgcmVtb3ZlUGFydGljbGUoeDpudW1iZXIsIHk6bnVtYmVyKTpQYXJ0aWNsZSB8IHVuZGVmaW5lZCB7XG4gICAgICB2YXIgcDpQYXJ0aWNsZSB8IHVuZGVmaW5lZCA9IHRoaXMudmFsdWVzW3ggKyB5ICogdGhpcy5fd2lkdGhdO1xuICAgICAgaWYgKHApIHtcbiAgICAgICAgICB0aGlzLl9jb3VudC0tO1xuICAgICAgICAgIHRoaXMudmFsdWVzW3ggKyB5ICogdGhpcy5fd2lkdGhdID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHA7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQmxvY2tzOyIsImNsYXNzIENvbG9ySFNWIHtcbiAgaDpudW1iZXIgID0gMC4wO1xuICBzOm51bWJlciAgPSAxLjA7XG4gIHY6bnVtYmVyICA9IDEuMDtcbiAgdmFsdWUoKTpudW1iZXJbXSB7IHJldHVybiB0aGlzLmhzdjJyZ2IoKSB9XG5cbiAgaHN2MnJnYiAoKSB7XG4gICAgICB2YXIgaCA9IHRoaXMuaCAvIDYwIDtcbiAgICAgIHZhciBzID0gdGhpcy5zIDtcbiAgICAgIHZhciB2ID0gdGhpcy52IDtcbiAgICAgIGlmICggcyA9PSAwICkgcmV0dXJuIFsgdiAqIDI1NSwgdiAqIDI1NSwgdiAqIDI1NSBdIDtcbiAgXG4gICAgICB2YXIgcmdiOiBudW1iZXJbXSA9IFtdO1xuICAgICAgdmFyIGkgPSBNYXRoLmZsb29yKGgpOztcbiAgICAgIHZhciBmID0gaCAtIGkgO1xuICAgICAgdmFyIHYxID0gdiAqICgxIC0gcykgO1xuICAgICAgdmFyIHYyID0gdiAqICgxIC0gcyAqIGYpIDtcbiAgICAgIHZhciB2MyA9IHYgKiAoMSAtIHMgKiAoMSAtIGYpKSA7XG4gIFxuICAgICAgc3dpdGNoKCBpICkge1xuICAgICAgICAgIGNhc2UgMCA6XG4gICAgICAgICAgY2FzZSA2IDpcbiAgICAgICAgICAgICAgcmdiID0gWyB2LCB2MywgdjEgXSA7XG4gICAgICAgICAgYnJlYWsgO1xuICBcbiAgICAgICAgICBjYXNlIDEgOlxuICAgICAgICAgICAgICByZ2IgPSBbIHYyLCB2LCB2MSBdIDtcbiAgICAgICAgICBicmVhayA7XG4gIFxuICAgICAgICAgIGNhc2UgMiA6XG4gICAgICAgICAgICAgIHJnYiA9IFsgdjEsIHYsIHYzIF0gO1xuICAgICAgICAgIGJyZWFrIDtcbiAgXG4gICAgICAgICAgY2FzZSAzIDpcbiAgICAgICAgICAgICAgcmdiID0gWyB2MSwgdjIsIHYgXSA7XG4gICAgICAgICAgYnJlYWsgO1xuICBcbiAgICAgICAgICBjYXNlIDQgOlxuICAgICAgICAgICAgICByZ2IgPSBbIHYzLCB2MSwgdiBdIDtcbiAgICAgICAgICBicmVhayA7XG4gIFxuICAgICAgICAgIGNhc2UgNSA6XG4gICAgICAgICAgICAgIHJnYiA9IFsgdiwgdjEsIHYyIF0gO1xuICAgICAgICAgIGJyZWFrIDtcbiAgICAgIH1cbiAgXG4gICAgICByZXR1cm4gcmdiLm1hcCggZnVuY3Rpb24gKCB2YWx1ZSApIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWUgKiAyNTUgO1xuICAgICAgfSkgO1xuICB9XG4gIFxufVxuXG5leHBvcnQgZGVmYXVsdCBDb2xvckhTVjsiLCJjbGFzcyBQYXJ0aWNsZSB7XG4gIHg6bnVtYmVyO1xuICB5Om51bWJlcjtcblxuICB2eDpudW1iZXIgPSAwO1xuICB2eTpudW1iZXIgPSAwO1xuICBjb2xvcjpudW1iZXJbXSA9IFtdO1xuICBjb25zdHJ1Y3Rvcih4Om51bWJlcj0wLCB5Om51bWJlcj0wICkge1xuICAgICAgdGhpcy54ID0geDtcbiAgICAgIHRoaXMueSA9IHk7XG4gIH1cblxuICBwdWJsaWMgWCgpOm51bWJlciB7XG4gICAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzLngpO1xuICB9XG4gIHB1YmxpYyBZKCk6bnVtYmVyIHtcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMueSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGFydGljbGU7IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiJdLCJuYW1lcyI6WyJ3aWR0aCIsImhlaWdodCIsIngiLCJ5IiwidGhpcyIsImhpdFRlc3RQb2ludCIsIkJhciIsIl93aWR0aCIsIl9oZWlnaHQiLCJfY291bnQiLCJ2YWx1ZXMiLCJBcnJheSIsImMiLCJpIiwiaCIsImoiLCJwIiwiY29sb3IiLCJ2YWx1ZSIsImNvdW50IiwiZ2V0UGFydGljbGUiLCJpbmRleCIsImxlbmd0aCIsInJlbW92ZVBhcnRpY2xlIiwidW5kZWZpbmVkIiwiQmxvY2tzIiwicyIsInYiLCJoc3YycmdiIiwicmdiIiwiTWF0aCIsImZsb29yIiwiZiIsInYxIiwidjIiLCJ2MyIsIm1hcCIsIkNvbG9ySFNWIiwidngiLCJ2eSIsIlgiLCJyb3VuZCIsIlkiLCJQYXJ0aWNsZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiY2FudmFzIiwiX2ZwcyIsInVwZGF0ZSIsIl9ub3ciLCJEYXRlIiwibm93IiwiX2VsYXBzZWQiLCJfdGhlbiIsIl9jdHgiLCJfZnBzSW50ZXJ2YWwiLCJjbGVhclJlY3QiLCJfY2FudmFzIiwiX2RhdGEiLCJnZXRJbWFnZURhdGEiLCJ3aWR0aEJhc2UiLCJkYXRhIiwiX2Jsb2NrcyIsImZvckVhY2giLCJibG9jayIsImlkeCIsInJlbW92ZUJhbGxzIiwiX2JhbGxzIiwiYmFsbCIsImJ2eCIsImJ2eSIsImJzcGVlZCIsInNxcnQiLCJicmFkaXVzIiwiYXRhbjIiLCJoaXRQYXJ0aWNsZSIsInJlbW92ZWRQIiwiY29zIiwiUEkiLCJyYW5kb20iLCJfZmFsbEJsb2NrcyIsInB1c2giLCJCbG9ja0JyZWFrZXIiLCJXSURUSCIsIkhFSUdIVCIsIl9iYXIiLCJhYnMiLCJiIiwiaW5kZXhPZiIsInNwbGljZSIsInJlbW92ZUZhbGxCcyIsImZhbGxQIiwibmV3YmFsbCIsInB1dEltYWdlRGF0YSIsImFsZXJ0IiwiaW5pdCIsIndpbmRvdyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImJpbmQiLCJiZWdpblBhdGgiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInN0cm9rZSIsInRvdWNobW92ZSIsImV2dCIsInRvdWNoZXMiLCJjbGllbnRYIiwib2Zmc2V0TGVmdCIsInByZXZlbnREZWZhdWx0IiwibW91c2Vtb3ZlIiwiX2JhbGwiLCJnZXRDb250ZXh0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIl0sInNvdXJjZVJvb3QiOiIifQ==